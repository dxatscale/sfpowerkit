name: Publish 

on:
  workflow_dispatch:

jobs:
  
  get_version_number: 
    runs-on: ubuntu-latest
    outputs: 
      version_number: ${{ steps.getversion.outputs.version_number }}
    
    steps: 
      - uses: actions/checkout@v3
      
      - name: get version number
        id: getversion
        run: echo "::set-output name=version_number::$(jq -r ".version" package.json)"
    
  alpha_build_deploy:
    uses: ./.github/workflows/npm-publish-template.yml
    needs: get_version_number
    if: ${{ github.ref }} == 'refs/heads/main'
    with:
        version: alpha
        package_version: ${{needs.get_version_number.outputs.version_number}}
      
        
  alpha_smoke_test:
    uses: ./.github/workflows/review-smoke-test.yml
    needs: get_version_number
    if: ${{ github.ref }} == 'refs/heads/main'
    with:
        version: alpha
        package_version: ${{needs.get_version_number.outputs.version_number}}
        
  beta:
    runs-on: ubuntu-latest
    needs: 
      - get_version_number
      - alpha_build_deploy
      - alpha_smoke_test
    steps:
      - uses: actions/checkout@v3
        
      - uses: ./.github/workflows/npm-publish-template.yml
        name: Promote to beta
        with: 
          version: beta
          package_version: ${{needs.get_version_number.outputs.version_number}}
          
  hotfix:
    runs-on: ubuntu-latest
    if: ${{ github.ref }} == 'refs/heads/hotfix/'
    needs: get_version_number
    steps:
      - uses: actions/checkout@v3
        
      - uses: ./.github/workflows/npm-publish-template.yml
        name: Promote to Hotfix
        with: 
          version: hotfix
          package_version: ${{needs.get_version_number.outputs.version_number}}
  
      - uses: ./.github/workflows/review-smoke-test.yml
        name: smoke test hotfix
        
  prod:
    runs-on: ubuntu-latest
    needs: 
      - get_version_number
      - beta
      - hotfix
    steps:
      - uses: actions/checkout@v3
        
      - uses: ./.github/workflows/npm-publish-template.yml
        name: Promote to prod
        with: 
          version: latest
          package_version: ${{needs.get_version_number.outputs.version_number}}
    
